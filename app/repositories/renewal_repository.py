from datetime import datetime
from app.db.db import SessionLocal
from app.db.models import Renewal, RentReturn

def insert_renewal(data):
    """
    ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á renewals
    ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ rent_returns.status_id = 5 ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Å‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
    """
    db = SessionLocal()
    try:
        # ‚úÖ 1. ‡πÄ‡∏û‡∏¥‡πà‡∏° record ‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á renewals
        new_record = Renewal(
            rent_id=data["rent_id"],
            old_due=data["old_due"],
            new_due=data["new_due"],
            note=data["note"],
            created_at=data["created_at"],
            status="pending"
        )
        db.add(new_record)

        # ‚úÖ 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï status_id = 5 ‡πÉ‡∏ô rent_returns ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Å
        db.query(RentReturn).filter(RentReturn.rent_id == data["rent_id"]).update(
            {"status_id": 5}
        )
        print(f"üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï RentReturn ID={data['rent_id']} ‚Üí status_id=5")

        # ‚úÖ 3. commit ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
        db.commit()
        print(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ß‡∏•‡∏≤ rent_id={data['rent_id']} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

    except Exception as e:
        db.rollback()
        print("‚ùå Database Error:", e)
        raise
    finally:
        db.close()


def is_pending_request_exists(rent_id):
    """
    ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠ pending ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö rent_id ‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    """
    db = SessionLocal()
    try:
        exists = db.query(Renewal).filter(
            Renewal.rent_id == rent_id,
            Renewal.status == "pending"
        ).first() is not None
        if exists:
            print(f"‚ö†Ô∏è ‡∏û‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠ pending ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö rent_id={rent_id}")
        return exists
    finally:
        db.close()
